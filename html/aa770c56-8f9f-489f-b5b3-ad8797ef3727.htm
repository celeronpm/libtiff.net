<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Using pre-built LibTiff.Net</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="aa770c56-8f9f-489f-b5b3-ad8797ef3727" /><meta name="Description" content="This article explains how to setup your environment to read and write TIFF files in your applications using pre-built LibTiff.Net library." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>Using pre-built LibTiff.Net</h1></td><td class="OH_tdRunningTitleColumn">LibTiff.Net, the managed version of the LibTiff library for reading and writing TIFF.</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="introduction"><p>
                This article explains how to setup your environment to read and write TIFF files in your
                applications using pre-built LibTiff.Net library.
            </p><p>
                If you prefer to use source code for LibTiff.Net, please read
                <a href="7aac47e1-7126-4e75-8667-be7549d6c0b6.htm">this article</a>.
                It describes the steps you need to take to build library from source code package.
            </p></div><h3 class="procedureSubHeading">Setting up your environment</h3><div class="subSection"><ol><li><p>
                            Download the latest release of the LibTiff.Net library
                            from <a href="http://bitmiracle.com/libtiff.net_bin.zip" target="_blank">http://bitmiracle.com/libtiff.net_bin.zip</a>. This zip contains latest pre-built version
                            of the library.
                        </p></li><li><p>
                            Extract the downloaded zip into a folder of your choice. In this
                            article I will use LibTiff_bin on desktop for that.
                        </p></li></ol></div><h3 class="procedureSubHeading">Running samples</h3><div class="subSection"><ol><li><p>
                            After zip is extracted, you can find Samples.exe in target folder.
                            This application contains LibTiff.Net samples.
                        </p></li><li><p>
                            Please take a time to review samples. It should help
                            you to read and write TIFF in your application.
                        </p></li></ol></div><h3 class="procedureSubHeading">Using LibTiff.Net in your WinForms, console, WPF or ASP.NET application</h3><div class="subSection"><ol><li><p>
                            Start Visual Studio IDE (versions 2005-2010 are
                            supported). In this example I will use Visual Studio 2005.
                            Create a new project or open existing one.
                        </p></li><li><p>
                            Add a reference to BitMiracle.LibTiff.NET.dll. To do so, please open
                            the Add Reference dialog, click on the Browse tab, browse to the folder
                            with extracted LibTiff.Net and select the BitMiracle.LibTiff.NET.dll.
                        </p><div class="ps_mediaCenter"><img alt="Add reference dialog" src="../media/AddReference.png" /></div></li><li><p>
                            To avoid typing full references to the dll, it is best
                            to add following using statement to the already existing
                            ones in your source file
                        </p><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeft" id="ID0EDAACADAAA_tabimgleft"> </div><div id="ID0EDAACADAAA_tab1" class="OH_CodeSnippetContainerTabFirst"><a href="#" onclick="javascript:ChangeTab('ID0EDAACADAAA','cs','1','4');return false;">C#</a></div><div id="ID0EDAACADAAA_tab2" class="OH_CodeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDAACADAAA','vb','2','4');return false;">VB</a></div><div id="ID0EDAACADAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst"><a href="#" onclick="javascript:ChangeTab('ID0EDAACADAAA','cpp','3','4');return false;">C++</a></div><div id="ID0EDAACADAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst"><a href="#" onclick="javascript:ChangeTab('ID0EDAACADAAA','fs','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDAACADAAA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDAACADAAA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDAACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDAACADAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> BitMiracle.LibTiff.Classic;</pre></div><div id="ID0EDAACADAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> BitMiracle.LibTiff.Classic</pre></div><div id="ID0EDAACADAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="ID0EDAACADAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDAACADAAA");</script></li><li><p>
                            Add the following method to your application source
                            code
                        </p><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeft" id="ID0EDAABADAAA_tabimgleft"> </div><div id="ID0EDAABADAAA_tab1" class="OH_CodeSnippetContainerTabFirst"><a href="#" onclick="javascript:ChangeTab('ID0EDAABADAAA','cs','1','4');return false;">C#</a></div><div id="ID0EDAABADAAA_tab2" class="OH_CodeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDAABADAAA','vb','2','4');return false;">VB</a></div><div id="ID0EDAABADAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst"><a href="#" onclick="javascript:ChangeTab('ID0EDAABADAAA','cpp','3','4');return false;">C++</a></div><div id="ID0EDAABADAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst"><a href="#" onclick="javascript:ChangeTab('ID0EDAABADAAA','fs','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDAABADAAA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDAABADAAA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDAABADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDAABADAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> createRandomTiff()
{
    <span class="highlight-keyword">int</span> width = <span class="highlight-number">100</span>;
    <span class="highlight-keyword">int</span> height = <span class="highlight-number">150</span>;
    <span class="highlight-keyword">string</span> fileName = <span class="highlight-literal">"random.tif"</span>;

    <span class="highlight-keyword">using</span> (Tiff output = Tiff.Open(fileName, <span class="highlight-literal">"w"</span>))
    {
        output.SetField(TiffTag.IMAGEWIDTH, width);
        output.SetField(TiffTag.IMAGELENGTH, height);
        output.SetField(TiffTag.SAMPLESPERPIXEL, <span class="highlight-number">1</span>);
        output.SetField(TiffTag.BITSPERSAMPLE, <span class="highlight-number">8</span>);
        output.SetField(TiffTag.ORIENTATION, Orientation.TOPLEFT);
        output.SetField(TiffTag.ROWSPERSTRIP, height);
        output.SetField(TiffTag.XRESOLUTION, <span class="highlight-number">88.0</span>);
        output.SetField(TiffTag.YRESOLUTION, <span class="highlight-number">88.0</span>);
        output.SetField(TiffTag.RESOLUTIONUNIT, ResUnit.INCH);
        output.SetField(TiffTag.PLANARCONFIG, PlanarConfig.CONTIG);
        output.SetField(TiffTag.PHOTOMETRIC, Photometric.MINISBLACK);
        output.SetField(TiffTag.COMPRESSION, Compression.NONE);
        output.SetField(TiffTag.FILLORDER, FillOrder.MSB2LSB);

        Random random = <span class="highlight-keyword">new</span> Random();
        <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; height; ++i)
        {
            <span class="highlight-keyword">byte</span>[] buf = <span class="highlight-keyword">new</span> <span class="highlight-keyword">byte</span>[width];
            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> j = <span class="highlight-number">0</span>; j &lt; width; ++j)
                buf[j] = (<span class="highlight-keyword">byte</span>)random.Next(<span class="highlight-number">255</span>);

            output.WriteScanline(buf, i);
        }

        output.WriteDirectory();
    }

    System.Diagnostics.Process.Start(fileName);
}</pre></div><div id="ID0EDAABADAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> createRandomTiff()
    <span class="highlight-keyword">Dim</span> width <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">100</span>
    <span class="highlight-keyword">Dim</span> height <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">150</span>
    <span class="highlight-keyword">Dim</span> fileName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"random.tif"</span>

    <span class="highlight-keyword">Using</span> output <span class="highlight-keyword">As</span> Tiff = Tiff.Open(fileName, <span class="highlight-literal">"w"</span>)
        output.SetField(TiffTag.IMAGEWIDTH, width)
        output.SetField(TiffTag.IMAGELENGTH, height)
        output.SetField(TiffTag.SAMPLESPERPIXEL, <span class="highlight-number">1</span>)
        output.SetField(TiffTag.BITSPERSAMPLE, <span class="highlight-number">8</span>)
        output.SetField(TiffTag.ORIENTATION, Orientation.TOPLEFT)
        output.SetField(TiffTag.ROWSPERSTRIP, height)
        output.SetField(TiffTag.XRESOLUTION, <span class="highlight-number">88.0</span>)
        output.SetField(TiffTag.YRESOLUTION, <span class="highlight-number">88.0</span>)
        output.SetField(TiffTag.RESOLUTIONUNIT, ResUnit.INCH)
        output.SetField(TiffTag.PLANARCONFIG, PlanarConfig.CONTIG)
        output.SetField(TiffTag.PHOTOMETRIC, Photometric.MINISBLACK)
        output.SetField(TiffTag.COMPRESSION, Compression.NONE)
        output.SetField(TiffTag.FILLORDER, FillOrder.MSB2LSB)

        <span class="highlight-keyword">Dim</span> random <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Random()
        <span class="highlight-keyword">For</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> height - <span class="highlight-number">1</span>
            <span class="highlight-keyword">Dim</span> buf <span class="highlight-keyword">As</span> <span class="highlight-keyword">Byte</span>() = <span class="highlight-keyword">New</span> <span class="highlight-keyword">Byte</span>(width - <span class="highlight-number">1</span>) {}
            <span class="highlight-keyword">For</span> j <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> width - <span class="highlight-number">1</span>
                buf(j) = <span class="highlight-keyword">CByte</span>(random.[<span class="highlight-keyword">Next</span>](<span class="highlight-number">255</span>))
            <span class="highlight-keyword">Next</span>

            output.WriteScanline(buf, i)
        <span class="highlight-keyword">Next</span>

        output.WriteDirectory()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

    System.Diagnostics.Process.Start(fileName)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div><div id="ID0EDAABADAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="ID0EDAABADAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDAABADAAA");</script></li><li><p>
                            Call createRandomTiff() method from your code. This should
                            produce random.tif file and open it in default TIFF viewer.
                        </p><div class="ps_mediaCenter"><img alt="random.tif opened in default TIFF viewer" src="../media/RandomTif.png" /></div></li></ol></div><h3 class="procedureSubHeading">Using LibTiff.Net in your Silverlight application</h3><div class="subSection"><ol><li><p>
                            Start Visual Studio IDE (versions 2008-2010 are
                            supported). In this example I will use Visual Studio 2008.
                            Create a new project or open existing one.
                        </p></li><li><p>
                            Add a reference to BitMiracle.LibTiff.Silverlight.dll. To do so, please open
                            the Add Reference dialog, click on the Browse tab, browse to the folder
                            with extracted LibTiff.Net and select the BitMiracle.LibTiff.Silverlight.dll.
                        </p><div class="ps_mediaCenter"><img alt="Add reference dialog" src="../media/AddReferenceSilverlight.png" /></div></li><li><p>
                            Other steps are as for WinForms, console, WPF or ASP.NET application.
                            You may also want to
                            <a href="http://bitmiracle.com/libtiff.net_src.zip" target="_blank">download source package</a>
                            and take a look at Silverlight Test Application. That application
                            shows how read the data bits of Tiff files and apply them to
                            Silverlight's WriteableBitmap.
                        </p></li></ol></div><p><strong>Conclusion</strong></p><p>
            Now you should be able to read and write TIFF in your applications using
            LibTiff.Net library. This is only the beginning, however.
            We encourage you to read through the documentation accompanying the
            library and review samples. You might also want to check out the
            <a href="http://bitmiracle.com/blog/" target="_blank">Bit Miracle blog</a>.
        </p></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="http://www.bitmiracle.com/libtiff" target="_blank">Copyright © 2008-2013 Bit Miracle. All rights reserved.</a></p><div class="OH_feedbacklink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40bitmiracle.com?Subject=LibTiff.Net, the managed version of the LibTiff library for reading and writing TIFF.">support@bitmiracle.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>
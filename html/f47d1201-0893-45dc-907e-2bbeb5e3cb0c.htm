<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Add custom TIFF tags to an existing TIFF image</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="f47d1201-0893-45dc-907e-2bbeb5e3cb0c" /><meta name="Description" content="This sample shows how to add custom TIFF tag to an existing TIFF image." /><meta name="Microsoft.Help.ContentType" content="Samples" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>Add custom TIFF tags to an existing TIFF image</h1></td><td class="OH_tdRunningTitleColumn">LibTiff.Net, the managed version of the LibTiff library for reading and writing TIFF.</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="introduction"><p>This sample shows how to add custom TIFF tag to an existing TIFF image.</p><p /><p>Custom tags are tags unknown to the library. However, they may be added to a file without problems. Special "extender callback" method should be used to instruct the library about format, names and other properties of such tags.</p><p /><p>This sample shows how to create "extender callback" method, register that method with the library and use Tiff.MergeFieldInfo to merge description of GDAL Metadata tag with other tags description. GDAL Metadata tag is used as an example, you may add any other tags the same way.</p></div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeft" id="ID0EDAAAA_tabimgleft"> </div><div id="ID0EDAAAA_tab1" class="OH_CodeSnippetContainerTabFirst"><a href="#" onclick="javascript:ChangeTab('ID0EDAAAA','cs','1','4');return false;">C#</a></div><div id="ID0EDAAAA_tab2" class="OH_CodeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDAAAA','vb','2','4');return false;">VB</a></div><div id="ID0EDAAAA_tab3" class="OH_CodeSnippetContainerTabDisabledNotFirst"><a href="#" onclick="javascript:ChangeTab('ID0EDAAAA','cpp','3','4');return false;">C++</a></div><div id="ID0EDAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst"><a href="#" onclick="javascript:ChangeTab('ID0EDAAAA','fs','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDAAAA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDAAAA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDAAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Diagnostics;
<span class="highlight-keyword">using</span> System.Drawing;
<span class="highlight-keyword">using</span> System.IO;

<span class="highlight-keyword">using</span> BitMiracle.LibTiff.Classic;

<span class="highlight-keyword">namespace</span> BitMiracle.LibTiff.Samples
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">class</span> AddCustomTagsToExistingTiff
    {
        <span class="highlight-keyword">private</span> <span class="highlight-keyword">const</span> TiffTag TIFFTAG_GDAL_METADATA = (TiffTag)<span class="highlight-number">42112</span>;

        <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> Tiff.TiffExtendProc m_parentExtender;

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> TagExtender(Tiff tif)
        {
            TiffFieldInfo[] tiffFieldInfo = 
            {
                <span class="highlight-keyword">new</span> TiffFieldInfo(TIFFTAG_GDAL_METADATA, TiffFieldInfo.Variable, 
                    TiffFieldInfo.Variable, TiffType.ASCII, FieldBit.Custom, 
                    <span class="highlight-keyword">true</span>, <span class="highlight-keyword">false</span>, <span class="highlight-literal">"GDALMetadata"</span>),
            };

            tif.MergeFieldInfo(tiffFieldInfo, tiffFieldInfo.Length);

            <span class="highlight-keyword">if</span> (m_parentExtender != <span class="highlight-keyword">null</span>)
                m_parentExtender(tif);
        }

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main()
        {
            <span class="highlight-comment">// Register the extender callback</span>
            <span class="highlight-comment">// It's a good idea to keep track of the previous tag extender (if any) so that we can call it</span>
            <span class="highlight-comment">// from our extender allowing a chain of customizations to take effect.</span>
            m_parentExtender = Tiff.SetTagExtender(TagExtender);

            File.Copy(<span class="highlight-literal">@"Sample Data\dummy.tif"</span>, <span class="highlight-literal">@"Sample Data\ToBeModifed.tif"</span>, <span class="highlight-keyword">true</span>);

            <span class="highlight-keyword">string</span> existingTiffName = <span class="highlight-literal">@"Sample Data\ToBeModifed.tif"</span>;
            <span class="highlight-keyword">using</span> (Tiff image = Tiff.Open(existingTiffName, <span class="highlight-literal">"a"</span>))
            {
                <span class="highlight-comment">// we should rewind to first directory (first image) because of append mode</span>
                image.SetDirectory(<span class="highlight-number">0</span>);

                <span class="highlight-comment">// set the custom tag </span>
                <span class="highlight-keyword">string</span> <span class="highlight-keyword">value</span> = <span class="highlight-literal">"&lt;GDALMetadata&gt;\n&lt;Item name=\"IMG_GUID\"&gt;"</span> + 
                    <span class="highlight-literal">"817C0168-0688-45CD-B799-CF8C4DE9AB2B&lt;/Item&gt;\n&lt;Item"</span> + 
                    <span class="highlight-literal">" name=\"LAYER_TYPE\" sample=\"0\"&gt;athematic&lt;/Item&gt;\n&lt;/GDALMetadata&gt;"</span>;
                image.SetField(TIFFTAG_GDAL_METADATA, <span class="highlight-keyword">value</span>);

                <span class="highlight-comment">// rewrites directory saving new tag</span>
                image.CheckpointDirectory();
            }

            <span class="highlight-comment">// restore previous tag extender</span>
            Tiff.SetTagExtender(m_parentExtender);
        }
    }
}</pre></div><div id="ID0EDAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> System
<span class="highlight-keyword">Imports</span> System.Diagnostics
<span class="highlight-keyword">Imports</span> System.Drawing
<span class="highlight-keyword">Imports</span> System.IO

<span class="highlight-keyword">Imports</span> BitMiracle.LibTiff.Classic

<span class="highlight-keyword">Namespace</span> BitMiracle.LibTiff.Samples
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">NotInheritable</span> <span class="highlight-keyword">Class</span> AddCustomTagsToExistingTiff
        <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> <span class="highlight-keyword">New</span>()
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
        <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Const</span> TIFFTAG_GDAL_METADATA <span class="highlight-keyword">As</span> TiffTag = <span class="highlight-keyword">DirectCast</span>(<span class="highlight-number">42112</span>, TiffTag)

        <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Shared</span> m_parentExtender <span class="highlight-keyword">As</span> Tiff.TiffExtendProc

        <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> TagExtender(tif <span class="highlight-keyword">As</span> Tiff)
            <span class="highlight-keyword">Dim</span> info <span class="highlight-keyword">As</span> TiffFieldInfo() = {<span class="highlight-keyword">New</span> TiffFieldInfo(TIFFTAG_GDAL_METADATA, _
              TiffFieldInfo.Variable, TiffFieldInfo.Variable, TiffType.ASCII, FieldBit.[Custom], _
              <span class="highlight-keyword">True</span>, <span class="highlight-keyword">False</span>, <span class="highlight-literal">"GDALMetadata"</span>)}

            tif.MergeFieldInfo(info, info.Length)

            <span class="highlight-keyword">If</span> m_parentExtender <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                m_parentExtender.Invoke(tif)
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

        <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> Main()
            <span class="highlight-comment">' Register the extender callback</span>
            <span class="highlight-comment">' It's a good idea to keep track of the previous tag extender (if any) so that we can call it</span>
            <span class="highlight-comment">' from our extender allowing a chain of customizations to take effect.</span>
            m_parentExtender = Tiff.SetTagExtender(<span class="highlight-keyword">AddressOf</span> TagExtender)

            File.Copy(<span class="highlight-literal">"Sample Data\dummy.tif"</span>, <span class="highlight-literal">"Sample Data\ToBeModifed.tif"</span>, <span class="highlight-keyword">True</span>)

            <span class="highlight-keyword">Dim</span> existingTiffName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"Sample Data\ToBeModifed.tif"</span>
            <span class="highlight-keyword">Using</span> image <span class="highlight-keyword">As</span> Tiff = Tiff.Open(existingTiffName, <span class="highlight-literal">"a"</span>)
                <span class="highlight-comment">' we should rewind to first directory (first image) because of append mode</span>
                image.SetDirectory(<span class="highlight-number">0</span>)

                <span class="highlight-comment">' set the custom tag </span>
                <span class="highlight-keyword">Dim</span> value <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"&lt;GDALMetadata&gt;"</span> &amp; vbLf &amp; <span class="highlight-literal">"&lt;Item name="</span><span class="highlight-literal">"IMG_GUID"</span><span class="highlight-literal">"&gt;"</span> &amp; <span class="highlight-literal">"817C0168-0688-45CD-B799-CF8C4DE9AB2B&lt;/Item&gt;"</span> &amp; vbLf &amp; <span class="highlight-literal">"&lt;Item"</span> &amp; <span class="highlight-literal">" name="</span><span class="highlight-literal">"LAYER_TYPE"</span><span class="highlight-literal">" sample="</span><span class="highlight-literal">"0"</span><span class="highlight-literal">"&gt;athematic&lt;/Item&gt;"</span> &amp; vbLf &amp; <span class="highlight-literal">"&lt;/GDALMetadata&gt;"</span>
                image.SetField(TIFFTAG_GDAL_METADATA, value)

                <span class="highlight-comment">' rewrites directory saving new tag</span>
                image.CheckpointDirectory()
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

            <span class="highlight-comment">' restore previous tag extender</span>
            Tiff.SetTagExtender(m_parentExtender)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div><div id="ID0EDAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div><div id="ID0EDAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><p>No code example is currently available or this language may not be supported.</p></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDAAAA");</script></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="http://www.bitmiracle.com/libtiff" target="_blank">Copyright © 2008-2013 Bit Miracle. All rights reserved.</a></p><div class="OH_feedbacklink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40bitmiracle.com?Subject=LibTiff.Net, the managed version of the LibTiff library for reading and writing TIFF.">support@bitmiracle.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>